# ==================================================================== #
# TITLE                                                                #
# Antimicrobial Resistance (AMR) Data Analysis for R                   #
#                                                                      #
# SOURCE                                                               #
# https://github.com/msberends/AMR                                     #
#                                                                      #
# LICENCE                                                              #
# (c) 2018-2021 Berends MS, Luz CF et al.                              #
# Developed at the University of Groningen, the Netherlands, in        #
# collaboration with non-profit organisations Certe Medical            #
# Diagnostics & Advice, and University Medical Center Groningen.       # 
#                                                                      #
# This R package is free software; you can freely use and distribute   #
# it for both personal and commercial purposes under the terms of the  #
# GNU General Public License version 2.0 (GNU GPL-2), as published by  #
# the Free Software Foundation.                                        #
# We created this package for both routine data analysis and academic  #
# research and it was publicly released in the hope that it will be    #
# useful, but it comes WITHOUT ANY WARRANTY OR LIABILITY.              #
#                                                                      #
# Visit our website for the full manual and a complete tutorial about  #
# how to conduct AMR data analysis: https://msberends.github.io/AMR/   #
# ==================================================================== #

# This GitHub Actions file runs without ANY dependency, so works on all versions of R since R-3.0.

on:
  push:
    branches:
      - premaster
      - master
  pull_request:
    branches:
      - master
  schedule:
    # run a schedule everyday at 1 AM.
    # this is to check that all dependencies are still available (see R/zzz.R)
    - cron:  '0 1 * * *'

name: R-code-check

jobs:
  R-code-check:
    runs-on: ${{ matrix.config.os }}
    
    continue-on-error: ${{ matrix.config.allowfail }}

    name: ${{ matrix.config.os }} (R-${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # these are the developmental version of R - we allow those tests to fail
          - {os: macOS-latest,   r: 'devel',   allowfail: true}
          - {os: windows-latest, r: 'devel',   allowfail: true}
          - {os: ubuntu-20.04,   r: 'devel',   allowfail: true,  rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          
          # test all systems against all released versions of R >= 3.0, we support them all!
          - {os: macOS-latest,   r: '4.1',     allowfail: false}
          - {os: windows-latest, r: '4.1',     allowfail: false}
          - {os: ubuntu-20.04,   r: '4.1',     allowfail: false, rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: macOS-latest,   r: '4.0',     allowfail: false}
          - {os: windows-latest, r: '4.0',     allowfail: false}
          - {os: ubuntu-20.04,   r: '4.0',     allowfail: false, rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: macOS-latest,   r: '3.6',     allowfail: false}
          - {os: windows-latest, r: '3.6',     allowfail: false}
          - {os: ubuntu-20.04,   r: '3.6',     allowfail: false, rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: macOS-latest,   r: '3.5',     allowfail: false}
          - {os: windows-latest, r: '3.5',     allowfail: false}
          - {os: ubuntu-20.04,   r: '3.5',     allowfail: false, rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: macOS-latest,   r: '3.4',     allowfail: false}
          - {os: windows-latest, r: '3.4',     allowfail: false}
          - {os: ubuntu-20.04,   r: '3.4',     allowfail: false, rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: macOS-latest,   r: '3.3',     allowfail: false}
          - {os: windows-latest, r: '3.3',     allowfail: false}
          - {os: ubuntu-20.04,   r: '3.3',     allowfail: false, rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: macOS-latest,   r: '3.2',     allowfail: false}
          - {os: windows-latest, r: '3.2',     allowfail: false}
          - {os: ubuntu-20.04,   r: '3.2',     allowfail: false, rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: macOS-latest,   r: '3.1',     allowfail: false}
          - {os: windows-latest, r: '3.1',     allowfail: false}
          - {os: ubuntu-20.04,   r: '3.1',     allowfail: false, rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: macOS-latest,   r: '3.0',     allowfail: false}
          - {os: windows-latest, r: '3.0',     allowfail: false}
          - {os: ubuntu-20.04,   r: '3.0',     allowfail: false, rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      R_REPOSITORIES: "https://cran.rstudio.com"
    
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        # update the below with sysreqs::sysreqs("DESCRIPTION") and check the "DEB" entries (for Ubuntu).
        # we don't want to depend on the sysreqs pkg here, as it requires quite a recent R version
        # as of May 2021: https://sysreqs.r-hub.io/pkg/AMR,R,cleaner,curl,dplyr,ggplot2,ggtext,knitr,microbenchmark,pillar,readxl,rmarkdown,rstudioapi,rvest,skimr,tidyr,tinytest,xml2,backports,crayon,rlang,vctrs,evaluate,highr,markdown,stringr,yaml,xfun,cli,ellipsis,fansi,lifecycle,utf8,glue,mime,magrittr,stringi,generics,R6,tibble,tidyselect,pkgconfig,purrr,digest,gtable,isoband,MASS,mgcv,scales,withr,nlme,Matrix,farver,labeling,munsell,RColorBrewer,viridisLite,lattice,colorspace,gridtext,Rcpp,RCurl,png,jpeg,bitops,cellranger,progress,rematch,hms,prettyunits,htmltools,jsonlite,tinytex,base64enc,httr,selectr,openssl,askpass,sys,repr,cpp11
        run: |
          sudo apt install -y libssl-dev pandoc pandoc-citeproc libxml2-dev libicu-dev libcurl4-openssl-dev libpng-dev

      - name: Query dependencies
        # this will change every day (i.e. at scheduled night run of GitHub Action), so it will cache dependency updates
        run: |
          writeLines(paste0(format(Sys.Date(), "%Y%m%d"), sprintf("-R-%i.%i", getRversion()$major, getRversion()$minor)), ".github/daily-R-bundle")
        shell: Rscript {0}
        
      - name: Restore cached R packages
        # this step will add the step 'Post Restore cached R packages' on a succesful run
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.config.os }}-${{ hashFiles('.github/daily-R-bundle') }}-v4

      - name: Unpack AMR and install R dependencies
        if: always()
        run: |
          tar -xf data-raw/AMR_latest.tar.gz
          Rscript -e "source('data-raw/_install_deps.R')"
        shell: bash
        
      - name: Show session info
        if: always()
        run: |
          options(width = 100)
          utils::sessionInfo()
          as.data.frame(utils::installed.packages())[, "Version", drop = FALSE]
        shell: Rscript {0}
        
      # - name: Only keep vignettes on release version
      - name: Remove vignettes
        # if: matrix.config.r != 'release'
        if: always()
        # writing to DESCRIPTION2 and then moving to DESCRIPTION is required for R < 3.3 as writeLines() cannot overwrite
        run: |
          rm -rf AMR/vignettes
          Rscript -e "writeLines(readLines('AMR/DESCRIPTION')[!grepl('VignetteBuilder', readLines('AMR/DESCRIPTION'))], 'AMR/DESCRIPTION2')"
          rm AMR/DESCRIPTION
          mv AMR/DESCRIPTION2 AMR/DESCRIPTION
        shell: bash
        
      - name: Run R CMD check
        if: always()
        env:
          _R_CHECK_CRAN_INCOMING_: false
          _R_CHECK_FORCE_SUGGESTS_: false
          _R_CHECK_DEPENDS_ONLY_: true
          _R_CHECK_LENGTH_1_CONDITION_: verbose
          _R_CHECK_LENGTH_1_LOGIC2_: verbose
          # during 'R CMD check', R_LIBS_USER will be overwritten, so:
          R_LIBS_USER_GH_ACTIONS: ${{ env.R_LIBS_USER }}
          R_RUN_TINYTEST: true
        run: |
          R CMD check --no-manual --run-donttest --run-dontrun AMR
        shell: bash

      - name: Show unit tests output
        if: always()
        run: |
          find . -name 'tinytest.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-r-${{ matrix.config.r }}-${{ matrix.config.os }}
          path: AMR.Rcheck
